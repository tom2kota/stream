{"version":3,"sources":["api/streams.js","history.js","actions/index.js","actions/types.js","components/streams/StreamList.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","fetchStream","streamId","dispatch","a","streams","get","response","type","payload","data","StreamList","renderListLoading","props","stream","length","map","className","key","id","renderAdmin","to","title","description","this","fetchStreams","userId","currentUserId","isSignedIn","style","textAlign","renderCreateStream","Component","connect","state","Object","values","auth","StreamForm","renderInput","input","label","meta","error","touched","autoComplete","renderError","onSubmit","formValues","handleSubmit","Field","name","component","reduxForm","form","validate","valueInput","errors","StreamCreate","createStream","getState","post","plainRouterHistory","push","StreamEdit","editStream","match","params","renderList","initialValues","_","pick","ownProps","patch","console","log","Modal","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","actions","document","querySelector","StreamDelete","renderActions","deleteStream","renderContent","delete","StreamShow","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","App","history","basename","process","path","exact","INITIAL_STATE","combineReducers","action","formReducer","omit","mapKeys","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.e30ed1d8.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst production = 'https://stream-json-server.herokuapp.com/';\n// const development = 'http://localhost:3001/';\n\nexport default axios.create({\n    baseURL: production\n})","// use: require(\"history\").createBrowserHistory` instead of: require(\"history/createBrowserHistory\")\n// import createHistory from \"history/createBrowserHistory\";\n\nimport {createBrowserHistory} from \"history\";\n\nexport default createBrowserHistory()","import streams from \"../api/streams\";\nimport plainRouterHistory from \"../history\";\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    CREATE_STREAM,\n    FETCH_STREAMS,\n    FETCH_STREAM,\n    EDIT_STREAM,\n    DELETE_STREAM\n} from \"./types\";\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    }\n}\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n}\n\n// TODO: apply Owner Authorization to createStream\nexport const createStream = formValues => async (dispatch, getState) => {\n    const {userId} = getState().auth;\n    const response = await streams.post('/streams', {...formValues, userId});\n    dispatch({type: CREATE_STREAM, payload: response.data});\n    plainRouterHistory.push('/')\n}\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get('/streams');\n    dispatch({type: FETCH_STREAMS, payload: response.data})\n}\n\nexport const fetchStream = (streamId) => async dispatch => {\n    const response = await streams.get(`/streams/${streamId}`);\n    dispatch({type: FETCH_STREAM, payload: response.data})\n}\n\nexport const editStream = (streamId, formValues) => async (dispatch, getState) => {\n    const {userId} = getState().auth;\n    const validOwner = formValues.userId === userId && userId !== null;\n    (validOwner) ? dispatch({\n        type: EDIT_STREAM,\n        payload: (await streams.patch(`/streams/${streamId}`, formValues)).data\n    }) : console.log('Validate Owner Error!');\n    plainRouterHistory.push('/')\n}\n\n// TODO: apply Owner Validation to deleteStream\nexport const deleteStream = (streamId) => async dispatch => {\n    await streams.delete(`/streams/${streamId}`);\n    dispatch({type: DELETE_STREAM, payload: streamId});\n    plainRouterHistory.push('/')\n}","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const CREATE_STREAM = 'CREATE_STREAM';\nexport const FETCH_STREAM = 'FETCH_STREAM';\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\nexport const DELETE_STREAM = 'DELETE_STREAM';\nexport const EDIT_STREAM = 'EDIT_STREAM';","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {connect} from \"react-redux\";\nimport {fetchStreams} from \"../../actions\";\n\n\nclass StreamList extends Component {\n\n    componentDidMount() {\n        this.props.fetchStreams()\n    }\n\n    renderAdmin(stream) {\n        const validOwner = (stream.userId === this.props.currentUserId) && (stream.userId !== null);\n        return (validOwner) ?\n            (\n                <div className=\"right floated content\">\n                    <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">\n                        Edit\n                    </Link>\n                    <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">\n                        Delete\n                    </Link>\n                </div>\n            ) : null\n    }\n\n    renderCreateStream() {\n        const signedOwner = this.props.isSignedIn;\n        return (signedOwner) ?\n            (\n                <div style={{textAlign: 'right'}}>\n                    <Link to=\"/streams/new\" className=\"ui button primary\">\n                        Create Stream\n                    </Link>\n                </div>\n            ) : null\n    }\n\n    renderListLoading = () => this.props.stream.length ? this.props.stream.map(stream =>\n        <div className=\"item\" key={stream.id}>\n            {this.renderAdmin(stream)}\n            <i className=\"large middle aligned icon camera\"/>\n            <div className=\"content\">\n                <Link to={`/streams/${stream.id}`} className=\"header\">\n                    {stream.title}\n                </Link>\n                <div className=\"description\">\n                    {stream.description}\n                </div>\n            </div>\n        </div>\n    ) : <div>Loading ... </div>\n\n    render() {\n        return (\n            <div>\n                <h3>List of Streams</h3>\n                <div className=\"ui celled list\">\n                    {this.renderListLoading()}\n                </div>\n                {this.renderCreateStream()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    stream: Object.values(state.stream),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n})\nexport default connect(mapStateToProps, {fetchStreams})(StreamList)","import React, {Component} from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\n\nclass StreamForm extends Component {\n\n    renderError({error, touched}) {\n        if (error && touched) {\n            return <div className=\"ui error message\">\n                <div className=\"header\">\n                    {error}\n                </div>\n            </div>\n        }\n\n    }\n\n    renderInput = ({input, label, meta}) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`\n\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\"/>\n                {this.renderError(meta)}\n            </div>\n        )\n    }\n\n    onSubmit = (formValues) => {\n        this.props.onSubmit(formValues)\n    }\n\n    render() {\n        return (\n            <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <Field name=\"title\" component={this.renderInput} label=\"Enter Title\"/>\n                <Field name=\"description\" component={this.renderInput} label=\"Enter Description\"/>\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        )\n    }\n}\n\nconst validate = (valueInput) => {\n    const errors = {}\n\n    if (!valueInput.title) {\n        errors.title = 'You must enter a title'\n    }\n\n    if (!valueInput.description) {\n        errors.description = 'You must enter a description'\n    }\n\n    return errors\n}\n\nexport default reduxForm({\n    form: 'streamForm', validate\n})(StreamForm)\n\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {createStream} from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nclass StreamCreate extends Component {\n\n    onSubmit = (formValues) => {\n        this.props.createStream(formValues)\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Create Stream</h3>\n                <StreamForm onSubmit={this.onSubmit}/>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, {createStream})(StreamCreate)","import React, {Component} from \"react\";\nimport _ from \"lodash\";\nimport {connect} from \"react-redux\";\nimport {fetchStream, editStream} from \"../../actions\";\nimport StreamForm from \"./StreamForm\";\n\nclass StreamEdit extends Component {\n\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id)\n    }\n\n    onSubmit = (formValues) => {\n        this.props.editStream(this.props.match.params.id, formValues)\n    }\n\n    renderList = () =>\n        !this.props.stream ? <div>Loading ... </div> :\n            <div>\n                <h3>Edit a Stream</h3>\n                <StreamForm\n                    initialValues={_.pick(this.props.stream, 'title', 'description', 'userId')}\n                    onSubmit={this.onSubmit}\n                />\n            </div>\n\n    render() {\n        return (\n            <div>\n                {this.renderList()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({stream: state.stream[ownProps.match.params.id]})\n\nexport default connect(mapStateToProps, {fetchStream, editStream})(StreamEdit)","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Modal = (props) => (\n    ReactDOM.createPortal(\n        <div className=\"ui dimmer modals visible active\"\n             onClick={props.onDismiss}>\n\n            <div className=\"ui standard modal visible active\"\n                 onClick={e => e.stopPropagation()}>\n                <div className=\"header\">\n                    {props.title}\n                </div>\n                <div className=\"content\">\n                    {props.content}\n                </div>\n                <div className=\"actions\">\n                    {props.actions}\n                </div>\n            </div>\n\n        </div>,\n        document.querySelector('#modal')\n    )\n)\n\nexport default Modal","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {fetchStream, deleteStream} from \"../../actions\";\nimport Modal from \"../Modal\";\nimport plainRouterHistory from \"../../history\";\n\nclass StreamDelete extends Component {\n\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    renderActions = () => (\n        <>\n            <button className=\"ui button negative\"\n                    onClick={() => this.props.deleteStream(this.props.match.params.id)}>\n                Delete\n            </button>\n            <Link to=\"/\" className=\"ui button\">Cancel</Link>\n        </>\n    )\n\n    renderContent = () => !this.props.stream ? 'Are you sure you want to delete this stream?' :\n        `Are you sure you want to delete the stream with title: ${this.props.stream.title} ?`\n\n\n    render() {\n        console.log('this.props.match.params.id', this.props.match.params.id);\n        console.log('this.props', this.props);\n\n        return (\n            <Modal\n                title=\"Delete Stream\"\n                content={this.renderContent()}\n                actions={this.renderActions()}\n                onDismiss={() => plainRouterHistory.push('/')}\n            />\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({stream: state.stream[ownProps.match.params.id]})\n\nexport default connect(mapStateToProps, {fetchStream, deleteStream})(StreamDelete)","import React, {Component} from \"react\";\n\nimport {connect} from \"react-redux\";\nimport {fetchStream} from \"../../actions\";\n\nclass StreamShow extends Component {\n\n    componentDidMount() {\n        console.log(this.props)\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    render() {\n        if (!this.props.stream) {\n            return <div>loading ...</div>\n        }\n\n        const {title, description} = this.props.stream\n\n        return (\n            <div>\n                <h4><strong><i>Title:</i>&emsp;</strong>{title}</h4>\n                <p><strong><i>Description:</i>&emsp;</strong>{description}</p>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({stream: state.stream[ownProps.match.params.id]})\nexport default connect(mapStateToProps, {fetchStream})(StreamShow)","import React, {Component} from \"react\";\nimport {connect} from 'react-redux'\nimport {signIn, signOut} from \"../actions\";\n\nclass GoogleAuth extends Component {\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n                window.gapi.client.init({\n                        clientId: '696355598576-sl92vso0q6frq5s5q1aq1q8hkrb760nn.apps.googleusercontent.com',\n                        scope: 'email'\n                    }\n                ).then(() => {\n                        this.auth = window.gapi.auth2.getAuthInstance();\n                        this.onAuthChange(this.auth.isSignedIn.get());\n                        this.auth.isSignedIn.listen(this.onAuthChange)\n                    }\n                )\n            }\n        )\n    }\n\n    onAuthChange = isSignedIn => isSignedIn ? this.props.signIn(this.auth.currentUser.get().getId()) : this.props.signOut()\n    onSignInClick = () => this.auth.signIn()\n    onSignOutClick = () => this.auth.signOut()\n\n    renderAuthButton() {\n        if (this.props.isSignedIn === null) {\n            return null\n        } else if (this.props.isSignedIn) {\n            return (\n                <button onClick={this.onSignOutClick} className=\"ui red google button\">\n                    <i className=\"google icon\"/>Sign Out</button>\n            )\n        } else {\n            return (\n                <button onClick={this.onSignInClick} className=\"ui red google button\">\n                    <i className=\"google icon\"/>Sign In with Google</button>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderAuthButton()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({isSignedIn: state.auth.isSignedIn})\n\nexport default connect(mapStateToProps, {signIn, signOut})(GoogleAuth)","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport GoogleAuth from \"./GoogleAuth\";\n\nconst Header = () => (\n    <div className=\"ui secondary pointing menu\">\n        <Link to=\"/\" className=\"item\">\n            Streamer\n        </Link>\n\n        <div className=\"right menu\">\n            <Link to=\"/\" className=\"item\">\n                All Streams\n            </Link>\n            <GoogleAuth/>\n        </div>\n    </div>\n)\n\nexport default Header","// with React-Router, each component needs to be designed to work in isolation (fetch its own data)\n// import {HashRouter, Route, Link} from \"react-router-dom\";\nimport React from \"react\";\nimport {Router, Route, Switch} from \"react-router-dom\";\nimport StreamList from \"./streams/StreamList\";\nimport StreamCreate from \"./streams/StreamCreate\";\nimport StreamEdit from \"./streams/StreamEdit\";\nimport StreamDelete from \"./streams/StreamDelete\";\nimport StreamShow from \"./streams/StreamShow\";\n\nimport Header from \"./Header\";\nimport history from \"../history\";\n\nconst App = () => (\n    <div className=\"ui container\">\n        {/*<HashRouter basename=\"/\">*/}\n        {/*    <div>*/}\n        {/*        <Header/>*/}\n        {/*    </div>*/}\n        {/*    <div>*/}\n        {/*        <Route path=\"/\" exact component={StreamList}/>*/}\n        {/*        <Route path=\"/streams/new\" component={StreamCreate}/>*/}\n        {/*        <Route path=\"/streams/edit\" component={StreamEdit}/>*/}\n        {/*        <Route path=\"/streams/delete/:id\" component={StreamDelete}/>*/}\n        {/*        <Route path=\"/streams/show\" component={StreamShow}/>*/}\n        {/*        <hr/>*/}\n        {/*        <ul>*/}\n        {/*            <li><Link to=\"/\">List of Streams</Link></li>*/}\n        {/*            <li><Link to=\"/streams/new\">Create New Stream</Link></li>*/}\n        {/*            <li><Link to=\"/streams/edit\">Edit Stream</Link></li>*/}\n        {/*            <li><Link to=\"/streams/delete\">Delete Stream</Link></li>*/}\n        {/*            <li><Link to=\"/streams/show\">Show Stream</Link></li>*/}\n        {/*        </ul>*/}\n        {/*    </div>*/}\n        {/*</HashRouter>*/}\n\n        <Router history={history} basename={process.env.PUBLIC_URL}>\n            <div>\n                <Header/>\n                <Switch>\n                    <Route path=\"/\" exact component={StreamList}/>\n                    <Route path=\"/streams/new\" exact component={StreamCreate}/>\n                    <Route path=\"/streams/edit/:id\" exact component={StreamEdit}/>\n                    <Route path=\"/streams/delete/:id\" exact component={StreamDelete}/>\n                    <Route path=\"/streams/:id\" exact component={StreamShow}/>\n                </Switch>\n            </div>\n        </Router>\n    </div>\n)\n\nexport default App","import {SIGN_IN, SIGN_OUT} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    isSignedIn: null,\n    userId: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SIGN_IN:\n            return {...state, isSignedIn: true, userId: action.payload};\n        case SIGN_OUT:\n            return {...state, isSignedIn: false, userId: null};\n        default:\n            return state\n    }\n}","import {combineReducers} from \"redux\";\nimport {reducer as formReducer} from \"redux-form\";\nimport authReducer from \"./authReducer\";\nimport streamReducer from \"./streamReducer\";\n\n\nexport default combineReducers({\n    auth: authReducer,\n    form: formReducer,\n    stream: streamReducer\n})","import _ from \"lodash\";\nimport {\n    FETCH_STREAMS,\n    FETCH_STREAM,\n    CREATE_STREAM,\n    EDIT_STREAM,\n    DELETE_STREAM\n} from \"../actions/types\";\n\nexport default (state = {}, action) => {\n\n    switch (action.type) {\n        case FETCH_STREAM:\n            return {...state, [action.payload.id]: action.payload}\n        case CREATE_STREAM:\n            return {...state, [action.payload.id]: action.payload}\n        case EDIT_STREAM:\n            return {...state, [action.payload.id]: action.payload}\n        case DELETE_STREAM:\n            return _.omit(state, action.payload)\n        case FETCH_STREAMS:\n            return {...state, ..._.mapKeys(action.payload, 'id')}\n        default:\n            return state\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\"\nimport {Provider} from \"react-redux\";\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport reduxThunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.querySelector('#root')\n)"],"sourceRoot":""}