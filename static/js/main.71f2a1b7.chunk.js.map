{"version":3,"sources":["components/streams/StreamList.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","components/streams/StreamDelete.js","components/streams/StreamShow.js","components/GoogleAuth.js","actions/index.js","actions/types.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["StreamList","StreamCreate","renderInput","input","label","meta","console","log","error","touched","className","valueInput","this","props","form","onSubmit","handleSubmit","Field","name","component","Component","reduxForm","validate","errors","title","description","StreamEdit","StreamDelete","StreamShow","GoogleAuth","onAuthChange","isSignedIn","signIn","auth","currentUser","get","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","onClick","renderAuthButton","connect","state","userId","type","payload","Header","to","App","basename","process","path","exact","INITIAL_STATE","combineReducers","action","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.71f2a1b7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst StreamList = () => <div>StreamList</div>\n\nexport default StreamList","import React, {Component} from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\n\nclass StreamCreate extends Component {\n\n    renderError({error, touched}) {\n        if (error && touched) {\n            return <div className=\"ui error message\">\n                <div className=\"header\">\n                    {error}\n                </div>\n            </div>\n        }\n\n    }\n\n    // TypeError: this is undefined  ... {this.renderError(meta)} ... FIX: use Arrow function\n    renderInput = ({input, label, meta}) => {\n        console.log('renderInput({meta}) props ... :  ', meta)\n        // console.log('renderInput(formProps) props ... :  ', formProps)\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`\n\n        return (\n            // <input name={formProps2.input.name} value={formProps.input.value}/>\n            // <input {...formProps.input} />\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\"/>\n                {/*<div>{meta.error}</div>*/}\n                {this.renderError(meta)}\n            </div>\n        )\n    }\n\n    onSubmit(valueInput) {\n        console.log('onSubmit(valueInput):   ...  ', valueInput)\n    }\n\n    render() {\n        console.log('this.props.form: ', this.props.form)\n        return (\n            <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <h1>{this.props.form}</h1>\n                <Field name=\"title\" component={this.renderInput} label=\"Enter Title\"/>\n                <Field name=\"description\" component={this.renderInput} label=\"Enter Description\"/>\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        )\n    }\n}\n\nconst validate = (valueInput) => {\n    console.log('!!!VALIDATE!!!')\n    const errors = {}\n\n    if (!valueInput.title) {\n        errors.title = 'You must enter a title'\n    }\n\n    if (!valueInput.description) {\n        errors.description = 'You must enter a description'\n    }\n\n    return errors\n}\n\nexport default reduxForm({\n    form: 'streamCreate', validate\n})(StreamCreate)\n","import React from \"react\";\n\nconst StreamEdit = () => <div>StreamEdit</div>\n\nexport default StreamEdit","import React from \"react\";\n\nconst StreamDelete = () => <div>StreamDelete</div>\n\nexport default StreamDelete","import React from \"react\";\n\nconst StreamShow = () => <div>StreamShow</div>\n\nexport default StreamShow","import React, {Component} from \"react\";\nimport {connect} from 'react-redux'\nimport {signIn, signOut} from \"../actions\";\n\nclass GoogleAuth extends Component {\n    // state = {isSignedIn: null}\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n                window.gapi.client.init({\n                        clientId: '696355598576-sl92vso0q6frq5s5q1aq1q8hkrb760nn.apps.googleusercontent.com',\n                        scope: 'email'\n                    }\n                ).then(() => {\n                        this.auth = window.gapi.auth2.getAuthInstance();\n                        // this.setState({isSignedIn: this.auth.isSignedIn.get()});\n                        this.onAuthChange(this.auth.isSignedIn.get());\n                        this.auth.isSignedIn.listen(this.onAuthChange)\n                    }\n                )\n            }\n        )\n    }\n\n    onAuthChange = (isSignedIn) => {\n        console.log('onAuthChange = () =>')\n        // this.setState({isSignedIn: this.auth.isSignedIn.get()})\n        if (isSignedIn) {\n            console.log(this.props.signIn())\n            this.props.signIn(this.auth.currentUser.get().getId())\n        } else {\n            console.log(this.props.signOut())\n            this.props.signOut()\n        }\n    }\n\n    onSignInClick = () => {\n        this.auth.signIn()\n    }\n\n    onSignOutClick = () => {\n        this.auth.signOut()\n    }\n\n\n    renderAuthButton() {\n        if (this.props.isSignedIn === null) {\n            return null\n        } else if (this.props.isSignedIn) {\n            return (\n                <button onClick={this.onSignOutClick} className=\"ui red google button\">\n                    <i className=\"google icon\"/>\n                    Sign Out\n                </button>\n            )\n        } else {\n            return (\n                <button onClick={this.onSignInClick} className=\"ui red google button\">\n                    <i className=\"google icon\"/>\n                    Sign In with Google\n                </button>\n            )\n        }\n    }\n\n    render() {\n        // console.log('this.state.isSignedIn: ...', this.state.isSignedIn)\n        return (\n            <div>\n                {this.renderAuthButton()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {isSignedIn: state.auth.isSignedIn}\n}\n\nexport default connect(mapStateToProps, {signIn, signOut})(GoogleAuth)","import {SIGN_IN, SIGN_OUT} from \"./types\";\n\nexport const signIn = (userId) => {\n    console.log('action signIn()')\n    return {\n        type: SIGN_IN,\n        payload: userId\n    }\n}\n\nexport const signOut = () => {\n    console.log('action signOut()')\n    return {\n        type: SIGN_OUT\n    }\n}","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport GoogleAuth from \"./GoogleAuth\";\n\nconst Header = () => (\n    <div className=\"ui secondary pointing menu\">\n        <Link to=\"/\" className=\"item\">\n            Streamer\n        </Link>\n\n        <div className=\"right menu\">\n            <Link to=\"/\" className=\"item\">\n                All Streams\n            </Link>\n            <GoogleAuth/>\n        </div>\n    </div>\n)\n\nexport default Header","import React from \"react\";\n// import {HashRouter, Link, Route} from \"react-router-dom\";\nimport {BrowserRouter, Link, Route} from \"react-router-dom\";\nimport StreamList from \"./streams/StreamList\";\nimport StreamCreate from \"./streams/StreamCreate\";\nimport StreamEdit from \"./streams/StreamEdit\";\nimport StreamDelete from \"./streams/StreamDelete\";\nimport StreamShow from \"./streams/StreamShow\";\nimport Header from \"./Header\"\n\nconst App = () => (\n    <div className=\"ui container\">\n        {/*<HashRouter basename=\"/\">*/}\n        {/*    <div>*/}\n        {/*        <Header/>*/}\n        {/*    </div>*/}\n        {/*    <div>*/}\n        {/*        <Route path=\"/\" exact component={StreamList}/>*/}\n        {/*        <Route path=\"/streams/new\" component={StreamCreate}/>*/}\n        {/*        <Route path=\"/streams/edit\" component={StreamEdit}/>*/}\n        {/*        <Route path=\"/streams/delete\" component={StreamDelete}/>*/}\n        {/*        <Route path=\"/streams/show\" component={StreamShow}/>*/}\n        {/*        <hr/>*/}\n        {/*        <ul>*/}\n        {/*            <li><Link to=\"/\">List of Streams</Link></li>*/}\n        {/*            <li><Link to=\"/streams/new\">Create New Stream</Link></li>*/}\n        {/*            <li><Link to=\"/streams/edit\">Edit Stream</Link></li>*/}\n        {/*            <li><Link to=\"/streams/delete\">Delete Stream</Link></li>*/}\n        {/*            <li><Link to=\"/streams/show\">Show Stream</Link></li>*/}\n        {/*        </ul>*/}\n        {/*    </div>*/}\n        {/*</HashRouter>*/}\n\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <div>\n                <Header/>\n                <Route path=\"/\" exact component={StreamList}/>\n                <Route path=\"/streams/new\" component={StreamCreate}/>\n                <Route path=\"/streams/edit\" component={StreamEdit}/>\n                <Route path=\"/streams/delete\" component={StreamDelete}/>\n                <Route path=\"/streams/show\" component={StreamShow}/>\n            </div>\n\n            <div>\n                <hr/>\n                <ul>\n                    <li><Link to=\"/\">List of Streams</Link></li>\n                    <li><Link to=\"/streams/new\">Create New Stream</Link></li>\n                    <li><Link to=\"/streams/edit\">Edit Stream</Link></li>\n                    <li><Link to=\"/streams/delete\">Delete Stream</Link></li>\n                    <li><Link to=\"/streams/show\">Show Stream</Link></li>\n                </ul>\n            </div>\n        </BrowserRouter>\n    </div>\n)\n\nexport default App\n","import {SIGN_IN, SIGN_OUT} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    isSignedIn: null,\n    userId: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    console.log('... authReducer state ... :', state)\n    switch (action.type) {\n        case SIGN_IN:\n            return {...state, isSignedIn: true, userId: action.payload};\n        case SIGN_OUT:\n            return {...state, isSignedIn: false, userId: null};\n        default:\n            return state\n    }\n}","import {combineReducers} from \"redux\";\nimport {reducer as formReducer} from \"redux-form\";\nimport authReducer from \"./authReducer\";\n\n\nexport default combineReducers({\n    auth: authReducer,\n    form: formReducer\n})\n","import React from \"react\";\nimport ReactDOM from \"react-dom\"\nimport {Provider} from \"react-redux\";\nimport {createStore, applyMiddleware, compose} from \"redux\";\n\nimport App from \"./components/App\";\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware())\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.querySelector('#root')\n)\n"],"sourceRoot":""}