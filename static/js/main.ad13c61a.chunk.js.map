{"version":3,"sources":["components/streams/StreamList.js","api/streams.js","components/streams/StreamCreate.js","actions/index.js","components/streams/StreamEdit.js","components/streams/StreamDelete.js","components/streams/StreamShow.js","components/GoogleAuth.js","actions/types.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["StreamList","axios","create","baseURL","StreamCreate","renderInput","input","label","meta","className","error","touched","autoComplete","renderError","onSubmit","formValues","props","createStream","this","handleSubmit","form","Field","name","component","Component","formWrapped","reduxForm","validate","valueInput","errors","title","description","connect","dispatch","a","streams","post","StreamEdit","console","log","StreamDelete","StreamShow","GoogleAuth","onAuthChange","isSignedIn","signIn","auth","currentUser","get","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","onClick","renderAuthButton","state","userId","type","payload","Header","to","App","basename","process","path","exact","INITIAL_STATE","combineReducers","action","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ad13c61a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst StreamList = () => <div>StreamList</div>\n\nexport default StreamList","//baseURL: 'http://localhost:3001'\n\nimport axios from \"axios\";\n\nexport default axios.create({\n  baseURL: 'https://stream-json-server.herokuapp.com/'\n})\n","import React, {Component} from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\n\nimport {connect} from \"react-redux\";\nimport {createStream} from \"../../actions\";\n\nclass StreamCreate extends Component {\n\n    renderError({error, touched}) {\n        if (error && touched) {\n            return <div className=\"ui error message\">\n                <div className=\"header\">\n                    {error}\n                </div>\n            </div>\n        }\n\n    }\n\n    renderInput = ({input, label, meta}) => {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`\n\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\"/>\n                {this.renderError(meta)}\n            </div>\n        )\n    }\n\n    onSubmit = (formValues) => {\n        this.props.createStream(formValues)\n    }\n\n\n    render() {\n        return (\n            <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <h1>{this.props.form}</h1>\n                <Field name=\"title\" component={this.renderInput} label=\"Enter Title\"/>\n                <Field name=\"description\" component={this.renderInput} label=\"Enter Description\"/>\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        )\n    }\n}\n\nconst validate = (valueInput) => {\n    const errors = {}\n\n    if (!valueInput.title) {\n        errors.title = 'You must enter a title'\n    }\n\n    if (!valueInput.description) {\n        errors.description = 'You must enter a description'\n    }\n\n    return errors\n}\n\nconst formWrapped = reduxForm({\n    form: 'streamCreate', validate\n})(StreamCreate)\n\n\nexport default connect(null, {createStream})(formWrapped)\n","import streams from \"../api/streams\";\nimport {SIGN_IN, SIGN_OUT} from \"./types\";\n\nexport const signIn = (userId) => {\n    //console.log('action signIn()')\n    return {\n        type: SIGN_IN,\n        payload: userId\n    }\n}\n\nexport const signOut = () => {\n    //console.log('action signOut()')\n    return {\n        type: SIGN_OUT\n    }\n}\n\nexport const createStream = (formValues) => async (dispatch) => {\n    streams.post('/streams', formValues)\n}\n","import React, {Component} from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\n\nclass StreamEdit extends Component {\n\n    renderInput({input, label, meta}) {\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`\n\n        return (\n            <div className={className}>\n                <label>{label}</label>\n                <input {...input} autoComplete=\"off\"/>\n                <div>{meta.error}</div>\n            </div>\n        )\n    }\n\n    onSubmit(valueInput) {\n        console.log('onSubmit(valueInput):   ...  ', valueInput)\n    }\n\n    render() {\n        return (\n            <form className=\"ui form error\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\n                <h1>{this.props.form}</h1>\n                <Field name=\"title\" component={this.renderInput} label=\"Enter Title\"/>\n                <Field name=\"description\" component={this.renderInput} label=\"Enter Description\"/>\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        )\n    }\n}\n\nconst validate = (valueInput) => {\n    const errors = {}\n\n    if (!valueInput.title) {\n        errors.title = 'You must enter a title'\n    }\n\n    if (!valueInput.description) {\n        errors.description = 'You must enter a description'\n    }\n\n    return errors\n}\n\nexport default reduxForm({\n    form: 'StreamEdit', validate: validate\n})(StreamEdit)\n","import React, {Component} from \"react\";\nimport {reduxForm} from \"redux-form\";\n\nclass StreamDelete extends Component {\n\n    render() {\n        return (\n            <div>StreamDelete</div>\n        )\n    }\n}\n\n\nexport default reduxForm({\n    form: 'StreamDelete'\n})(StreamDelete)\n","import React from \"react\";\n\nconst StreamShow = () => <div>StreamShow</div>\n\nexport default StreamShow","import React, {Component} from \"react\";\nimport {connect} from 'react-redux'\nimport {signIn, signOut} from \"../actions\";\n\nclass GoogleAuth extends Component {\n    // state = {isSignedIn: null}\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n                window.gapi.client.init({\n                        clientId: '696355598576-sl92vso0q6frq5s5q1aq1q8hkrb760nn.apps.googleusercontent.com',\n                        scope: 'email'\n                    }\n                ).then(() => {\n                        this.auth = window.gapi.auth2.getAuthInstance();\n                        // this.setState({isSignedIn: this.auth.isSignedIn.get()});\n                        this.onAuthChange(this.auth.isSignedIn.get());\n                        this.auth.isSignedIn.listen(this.onAuthChange)\n                    }\n                )\n            }\n        )\n    }\n\n    onAuthChange = (isSignedIn) => {\n        console.log('onAuthChange = () =>')\n        // this.setState({isSignedIn: this.auth.isSignedIn.get()})\n        if (isSignedIn) {\n            console.log(this.props.signIn())\n            this.props.signIn(this.auth.currentUser.get().getId())\n        } else {\n            console.log(this.props.signOut())\n            this.props.signOut()\n        }\n    }\n\n    onSignInClick = () => {\n        this.auth.signIn()\n    }\n\n    onSignOutClick = () => {\n        this.auth.signOut()\n    }\n\n\n    renderAuthButton() {\n        if (this.props.isSignedIn === null) {\n            return null\n        } else if (this.props.isSignedIn) {\n            return (\n                <button onClick={this.onSignOutClick} className=\"ui red google button\">\n                    <i className=\"google icon\"/>\n                    Sign Out\n                </button>\n            )\n        } else {\n            return (\n                <button onClick={this.onSignInClick} className=\"ui red google button\">\n                    <i className=\"google icon\"/>\n                    Sign In with Google\n                </button>\n            )\n        }\n    }\n\n    render() {\n        // console.log('this.state.isSignedIn: ...', this.state.isSignedIn)\n        return (\n            <div>\n                {this.renderAuthButton()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {isSignedIn: state.auth.isSignedIn}\n}\n\nexport default connect(mapStateToProps, {signIn, signOut})(GoogleAuth)","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport GoogleAuth from \"./GoogleAuth\";\n\nconst Header = () => (\n    <div className=\"ui secondary pointing menu\">\n        <Link to=\"/\" className=\"item\">\n            Streamer\n        </Link>\n\n        <div className=\"right menu\">\n            <Link to=\"/\" className=\"item\">\n                All Streams\n            </Link>\n            <GoogleAuth/>\n        </div>\n    </div>\n)\n\nexport default Header","import React from \"react\";\n// import {HashRouter, Link, Route} from \"react-router-dom\";\nimport {BrowserRouter, Link, Route} from \"react-router-dom\";\nimport StreamList from \"./streams/StreamList\";\nimport StreamCreate from \"./streams/StreamCreate\";\nimport StreamEdit from \"./streams/StreamEdit\";\nimport StreamDelete from \"./streams/StreamDelete\";\nimport StreamShow from \"./streams/StreamShow\";\nimport Header from \"./Header\"\n\nconst App = () => (\n    <div className=\"ui container\">\n        {/*<HashRouter basename=\"/\">*/}\n        {/*    <div>*/}\n        {/*        <Header/>*/}\n        {/*    </div>*/}\n        {/*    <div>*/}\n        {/*        <Route path=\"/\" exact component={StreamList}/>*/}\n        {/*        <Route path=\"/streams/new\" component={StreamCreate}/>*/}\n        {/*        <Route path=\"/streams/edit\" component={StreamEdit}/>*/}\n        {/*        <Route path=\"/streams/delete\" component={StreamDelete}/>*/}\n        {/*        <Route path=\"/streams/show\" component={StreamShow}/>*/}\n        {/*        <hr/>*/}\n        {/*        <ul>*/}\n        {/*            <li><Link to=\"/\">List of Streams</Link></li>*/}\n        {/*            <li><Link to=\"/streams/new\">Create New Stream</Link></li>*/}\n        {/*            <li><Link to=\"/streams/edit\">Edit Stream</Link></li>*/}\n        {/*            <li><Link to=\"/streams/delete\">Delete Stream</Link></li>*/}\n        {/*            <li><Link to=\"/streams/show\">Show Stream</Link></li>*/}\n        {/*        </ul>*/}\n        {/*    </div>*/}\n        {/*</HashRouter>*/}\n\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <div>\n                <Header/>\n                <Route path=\"/\" exact component={StreamList}/>\n                <Route path=\"/streams/new\" component={StreamCreate}/>\n                <Route path=\"/streams/edit\" component={StreamEdit}/>\n                <Route path=\"/streams/delete\" component={StreamDelete}/>\n                <Route path=\"/streams/show\" component={StreamShow}/>\n            </div>\n\n            <div>\n                <hr/>\n                <ul>\n                    <li><Link to=\"/\">List of Streams</Link></li>\n                    <li><Link to=\"/streams/new\">Create New Stream</Link></li>\n                    <li><Link to=\"/streams/edit\">Edit Stream</Link></li>\n                    <li><Link to=\"/streams/delete\">Delete Stream</Link></li>\n                    <li><Link to=\"/streams/show\">Show Stream</Link></li>\n                </ul>\n            </div>\n        </BrowserRouter>\n    </div>\n)\n\nexport default App\n","import {SIGN_IN, SIGN_OUT} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    isSignedIn: null,\n    userId: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    console.log('... authReducer state ... :', state)\n    switch (action.type) {\n        case SIGN_IN:\n            return {...state, isSignedIn: true, userId: action.payload};\n        case SIGN_OUT:\n            return {...state, isSignedIn: false, userId: null};\n        default:\n            return state\n    }\n}","import {combineReducers} from \"redux\";\nimport {reducer as formReducer} from \"redux-form\";\nimport authReducer from \"./authReducer\";\n\n\nexport default combineReducers({\n    auth: authReducer,\n    form: formReducer\n})\n","import React from \"react\";\nimport ReactDOM from \"react-dom\"\nimport {Provider} from \"react-redux\";\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport reduxThunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport reducers from './reducers'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.querySelector('#root')\n)\n"],"sourceRoot":""}