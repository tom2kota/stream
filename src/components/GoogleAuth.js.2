import React, {Component} from "react";
import {connect} from 'react-redux'
import {signIn, signOut} from "../actions";

class GoogleAuth extends Component {
    // state = {isSignedIn: null}

    componentDidMount() {
        window.gapi.load('client:auth2', () => {
                window.gapi.client.init({
                        clientId: '696355598576-sl92vso0q6frq5s5q1aq1q8hkrb760nn.apps.googleusercontent.com',
                        scope: 'email'
                    }
                ).then(() => {
                        this.auth = window.gapi.auth2.getAuthInstance();
                        // this.setState({isSignedIn: this.auth.isSignedIn.get()});
                        this.onAuthChange(this.auth.isSignedIn.get());
                        this.auth.isSignedIn.listen(this.onAuthChange)
                    }
                )
            }
        )
    }

    onAuthChange = (isSignedIn) => {
        // console.log('onAuthChange = () =>')
        // this.setState({isSignedIn: this.auth.isSignedIn.get()})
        if (isSignedIn) {
            // console.log(this.props.signIn())
            this.props.signIn(this.auth.currentUser.get().getId())
        } else {
            // console.log(this.props.signOut())
            this.props.signOut()
        }
    }

    onSignInClick = () => {
        this.auth.signIn()
    }

    onSignOutClick = () => {
        this.auth.signOut()
    }


    renderAuthButton() {
        if (this.props.isSignedIn === null) {
            return null
        } else if (this.props.isSignedIn) {
            return (
                <button onClick={this.onSignOutClick} className="ui red google button">
                    <i className="google icon"/>
                    Sign Out
                </button>
            )
        } else {
            return (
                <button onClick={this.onSignInClick} className="ui red google button">
                    <i className="google icon"/>
                    Sign In with Google
                </button>
            )
        }
    }

    render() {
        // console.log('this.state.isSignedIn: ...', this.state.isSignedIn)
        return (
            <div>
                {this.renderAuthButton()}
            </div>
        )
    }
}

const mapStateToProps = (state) => {
    return {isSignedIn: state.auth.isSignedIn}
}

export default connect(mapStateToProps, {signIn, signOut})(GoogleAuth)